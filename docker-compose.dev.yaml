version: '3'
services:
  postgres:
    image: postgres:12-alpine
    hostname: postgres
    container_name: postgres
    volumes:
      - ./.data/postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: Test1234
      POSTGRES_USER: music-market
      POSTGRES_DB: music_market_db
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - ./.data/redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always

  adminer:
    image: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - 8081:8080
    networks:
      - app-network

  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
      - web-root:/var/www/html
    depends_on:
      - music-market
      - adminer
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/ec2-user/music-market/views/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/ec2-user/music-market/dhparam/
      o: bind
